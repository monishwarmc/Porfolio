{"ast":null,"code":"import _regeneratorRuntime from\"/home/monishwar69/Desktop/git/Portfolio/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/monishwar69/Desktop/git/Portfolio/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/monishwar69/Desktop/git/Portfolio/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";var wait=function wait(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};/**\n * This is a custom hook that can be used to submit a form and simulate an API call\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\n */var useSubmit=function useSubmit(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),response=_useState4[0],setResponse=_useState4[1];var submit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url,data){var random;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:random=Math.random();setLoading(true);_context.prev=2;_context.next=5;return wait(2000);case 5:// if (random < 0.5) {\n//   throw new Error(\"Something went wrong\");\n// }\nsetResponse({type:'success',message:\"Thanks for your submission \".concat(data.firstName,\", I will get back to you shortly!\")});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);setResponse({type:'error',message:'Something went wrong, please try again later!'});case 11:_context.prev=11;setLoading(false);return _context.finish(11);case 14:case\"end\":return _context.stop();}}},_callee,null,[[2,8,11,14]]);}));return function submit(_x,_x2){return _ref.apply(this,arguments);};}();return{isLoading:isLoading,response:response,submit:submit};};export default useSubmit;","map":{"version":3,"names":["useState","wait","ms","Promise","resolve","setTimeout","useSubmit","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","response","setResponse","submit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","data","random","wrap","_callee$","_context","prev","next","Math","type","message","concat","firstName","t0","finish","stop","_x","_x2","apply","arguments"],"sources":["/home/monishwar69/Desktop/git/Portfolio/src/hooks/useSubmit.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n/**\n * This is a custom hook that can be used to submit a form and simulate an API call\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\n */\nconst useSubmit = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const submit = async (url, data) => {\n    const random = Math.random();\n    setLoading(true);\n    try {\n      await wait(2000);\n      // if (random < 0.5) {\n      //   throw new Error(\"Something went wrong\");\n      // }\n      setResponse({\n        type: 'success',\n        message: `Thanks for your submission ${data.firstName}, I will get back to you shortly!`,\n      })\n    } catch (error) {\n      setResponse({\n        type: 'error',\n        message: 'Something went wrong, please try again later!',\n      })\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { isLoading, response, submit };\n}\n\nexport default useSubmit;\n"],"mappings":"wdAAA,OAAQA,QAAQ,KAAO,OAAO,CAE9B,GAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAIC,EAAE,QAAK,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAEF,EAAE,CAAC,GAAC,GAEtE;AACA;AACA;AACA,GACA,GAAM,CAAAI,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,IAAAC,SAAA,CAAgCP,QAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAxCG,SAAS,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAgCZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAE5B,GAAM,CAAAG,MAAM,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,CAAEC,IAAI,MAAAC,MAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACvBL,MAAM,CAAGM,IAAI,CAACN,MAAM,CAAC,CAAC,CAC5Bb,UAAU,CAAC,IAAI,CAAC,CAACgB,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAET,CAAA5B,IAAI,CAAC,IAAI,CAAC,QAChB;AACA;AACA;AACAc,WAAW,CAAC,CACVgB,IAAI,CAAE,SAAS,CACfC,OAAO,+BAAAC,MAAA,CAAgCV,IAAI,CAACW,SAAS,qCACvD,CAAC,CAAC,CAAAP,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAQ,EAAA,CAAAR,QAAA,aAEFZ,WAAW,CAAC,CACVgB,IAAI,CAAE,OAAO,CACbC,OAAO,CAAE,+CACX,CAAC,CAAC,SAAAL,QAAA,CAAAC,IAAA,IAEFjB,UAAU,CAAC,KAAK,CAAC,CAAC,OAAAgB,QAAA,CAAAS,MAAA,8BAAAT,QAAA,CAAAU,IAAA,OAAAhB,OAAA,sBAErB,kBApBK,CAAAL,MAAMA,CAAAsB,EAAA,CAAAC,GAAA,SAAAtB,IAAA,CAAAuB,KAAA,MAAAC,SAAA,OAoBX,CAED,MAAO,CAAE/B,SAAS,CAATA,SAAS,CAAEI,QAAQ,CAARA,QAAQ,CAAEE,MAAM,CAANA,MAAO,CAAC,CACxC,CAAC,CAED,cAAe,CAAAV,SAAS"},"metadata":{},"sourceType":"module"}