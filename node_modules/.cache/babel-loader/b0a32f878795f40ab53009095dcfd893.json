{"ast":null,"code":"import _objectSpread from \"/home/monishwar69/Desktop/git/Portfolio/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useContext, useRef, useMemo } from 'react';\nimport { animate } from 'popmotion';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useOnChange } from './use-on-change.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _useContext = useContext(MotionConfigContext),\n    isStatic = _useContext.isStatic;\n  var activeSpringAnimation = useRef(null);\n  var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  useMemo(function () {\n    return value.attach(function (v, set) {\n      /**\n       * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n       * at that level, but this will work for now\n       */\n      if (isStatic) return set(v);\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n      activeSpringAnimation.current = animate(_objectSpread(_objectSpread({\n        from: value.get(),\n        to: v,\n        velocity: value.getVelocity()\n      }, config), {}, {\n        onUpdate: set\n      }));\n      return value.get();\n    });\n  }, [JSON.stringify(config)]);\n  useOnChange(source, function (v) {\n    return value.set(parseFloat(v));\n  });\n  return value;\n}\nexport { useSpring };","map":{"version":3,"names":["useContext","useRef","useMemo","animate","isMotionValue","useMotionValue","useOnChange","MotionConfigContext","useSpring","source","config","arguments","length","undefined","_useContext","isStatic","activeSpringAnimation","value","get","attach","v","set","current","stop","_objectSpread","from","to","velocity","getVelocity","onUpdate","JSON","stringify","parseFloat"],"sources":["/home/monishwar69/Desktop/git/Portfolio/node_modules/framer-motion/dist/es/value/use-spring.mjs"],"sourcesContent":["import { useContext, useRef, useMemo } from 'react';\nimport { animate } from 'popmotion';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { useOnChange } from './use-on-change.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    useMemo(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = animate({\n                from: value.get(),\n                to: v,\n                velocity: value.getVelocity(),\n                ...config,\n                onUpdate: set,\n            });\n            return value.get();\n        });\n    }, [JSON.stringify(config)]);\n    useOnChange(source, (v) => value.set(parseFloat(v)));\n    return value;\n}\n\nexport { useSpring };\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,mBAAmB,QAAQ,oCAAoC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,MAAM,EAAe;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAClC,IAAAG,WAAA,GAAqBd,UAAU,CAACO,mBAAmB,CAAC;IAA5CQ,QAAQ,GAAAD,WAAA,CAARC,QAAQ;EAChB,IAAMC,qBAAqB,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC1C,IAAMgB,KAAK,GAAGZ,cAAc,CAACD,aAAa,CAACK,MAAM,CAAC,GAAGA,MAAM,CAACS,GAAG,CAAC,CAAC,GAAGT,MAAM,CAAC;EAC3EP,OAAO,CAAC,YAAM;IACV,OAAOe,KAAK,CAACE,MAAM,CAAC,UAACC,CAAC,EAAEC,GAAG,EAAK;MAC5B;AACZ;AACA;AACA;MACY,IAAIN,QAAQ,EACR,OAAOM,GAAG,CAACD,CAAC,CAAC;MACjB,IAAIJ,qBAAqB,CAACM,OAAO,EAAE;QAC/BN,qBAAqB,CAACM,OAAO,CAACC,IAAI,CAAC,CAAC;MACxC;MACAP,qBAAqB,CAACM,OAAO,GAAGnB,OAAO,CAAAqB,aAAA,CAAAA,aAAA;QACnCC,IAAI,EAAER,KAAK,CAACC,GAAG,CAAC,CAAC;QACjBQ,EAAE,EAAEN,CAAC;QACLO,QAAQ,EAAEV,KAAK,CAACW,WAAW,CAAC;MAAC,GAC1BlB,MAAM;QACTmB,QAAQ,EAAER;MAAG,EAChB,CAAC;MACF,OAAOJ,KAAK,CAACC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,CAACY,IAAI,CAACC,SAAS,CAACrB,MAAM,CAAC,CAAC,CAAC;EAC5BJ,WAAW,CAACG,MAAM,EAAE,UAACW,CAAC;IAAA,OAAKH,KAAK,CAACI,GAAG,CAACW,UAAU,CAACZ,CAAC,CAAC,CAAC;EAAA,EAAC;EACpD,OAAOH,KAAK;AAChB;AAEA,SAAST,SAAS"},"metadata":{},"sourceType":"module"}